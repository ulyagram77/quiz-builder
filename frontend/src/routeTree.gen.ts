/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'

const QuizzesIndexLazyRouteImport = createFileRoute('/quizzes/')()
const QuizzesCreateLazyRouteImport = createFileRoute('/quizzes/create')()
const QuizzesIdLazyRouteImport = createFileRoute('/quizzes/$id')()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const QuizzesIndexLazyRoute = QuizzesIndexLazyRouteImport.update({
  id: '/quizzes/',
  path: '/quizzes/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/quizzes/index.lazy').then((d) => d.Route))
const QuizzesCreateLazyRoute = QuizzesCreateLazyRouteImport.update({
  id: '/quizzes/create',
  path: '/quizzes/create',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/quizzes/create.lazy').then((d) => d.Route),
)
const QuizzesIdLazyRoute = QuizzesIdLazyRouteImport.update({
  id: '/quizzes/$id',
  path: '/quizzes/$id',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/quizzes/$id.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/quizzes/$id': typeof QuizzesIdLazyRoute
  '/quizzes/create': typeof QuizzesCreateLazyRoute
  '/quizzes': typeof QuizzesIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/quizzes/$id': typeof QuizzesIdLazyRoute
  '/quizzes/create': typeof QuizzesCreateLazyRoute
  '/quizzes': typeof QuizzesIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/quizzes/$id': typeof QuizzesIdLazyRoute
  '/quizzes/create': typeof QuizzesCreateLazyRoute
  '/quizzes/': typeof QuizzesIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/quizzes/$id' | '/quizzes/create' | '/quizzes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/quizzes/$id' | '/quizzes/create' | '/quizzes'
  id: '__root__' | '/' | '/quizzes/$id' | '/quizzes/create' | '/quizzes/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  QuizzesIdLazyRoute: typeof QuizzesIdLazyRoute
  QuizzesCreateLazyRoute: typeof QuizzesCreateLazyRoute
  QuizzesIndexLazyRoute: typeof QuizzesIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quizzes/': {
      id: '/quizzes/'
      path: '/quizzes'
      fullPath: '/quizzes'
      preLoaderRoute: typeof QuizzesIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quizzes/create': {
      id: '/quizzes/create'
      path: '/quizzes/create'
      fullPath: '/quizzes/create'
      preLoaderRoute: typeof QuizzesCreateLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/quizzes/$id': {
      id: '/quizzes/$id'
      path: '/quizzes/$id'
      fullPath: '/quizzes/$id'
      preLoaderRoute: typeof QuizzesIdLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  QuizzesIdLazyRoute: QuizzesIdLazyRoute,
  QuizzesCreateLazyRoute: QuizzesCreateLazyRoute,
  QuizzesIndexLazyRoute: QuizzesIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
